/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.ArrayList;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    public static int roll(int n){
        ArrayList<Integer> diceResults = new ArrayList<>();
        for (int i =0; i < n; i++){
            int value = (int)(Math.random() * 6) + 1;
            diceResults.add(value);
        }
        System.out.println(diceResults);
        return n;
    }

    public static boolean containsDuplicates(int [] arr){
        boolean defaultValue = false;
        for (int i =0; i < arr.length; i++){
            for (int j=0; j<arr.length; j++){
                if (arr[i]==arr[j] && i != j){
                    defaultValue = true;}
            }
        }
        return defaultValue;
    }

    public static double calculateAverage(int[] arr){
        int sum = 0;
        for (int i =0; i <arr.length; i++){
            sum = sum + arr[i];
        }
        double average = sum/arr.length;
        return average;
    }

    public static int[] lowestWeatherAverage(int[][] weatherArray){
        int sum = 0;
        int [] lowestWeather;
        ArrayList<Integer> allAverages= new ArrayList<>();

        for (int i = 0; i < weatherArray.length; i++){
            for (int j=0; j<weatherArray[i].length; j++){
                sum = sum + weatherArray[i][j];
            }
            allAverages.add(sum/weatherArray[i].length);
            sum = 0;
        }
        int minValue=allAverages.get(0);
        int minValueIndex=0;
        for(int i=0;i<allAverages.size();++i){
            if(allAverages.get(i) < minValue){
                minValue=allAverages.get(i);
                minValueIndex = allAverages.indexOf(allAverages.get(i));
            }
        }

        lowestWeather= weatherArray[minValueIndex];

        return lowestWeather;

    }

}
